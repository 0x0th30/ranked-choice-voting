// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VotingState {
  OPEN
  CLOSED
}

model Voting {
  uuid              String      @id @unique
  user              User        @relation(fields: [author_uuid], references: [uuid])
  author_uuid       String
  name              String
  available_options String[]
  state             VotingState
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt
  votes             Vote[]
}

model Vote {
  id            Int      @id @unique @default(autoincrement())
  user          User     @relation(fields: [user_uuid], references: [uuid])
  user_uuid     String
  voting        Voting   @relation(fields: [voting_uuid], references: [uuid])
  voting_uuid   String
  vote_sequence String[]
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt()
}

enum UserState {
  ACTIVE
  INACTIVE
}

model User {
  uuid          String    @id @unique
  name          String
  email         String    @unique
  password_hash String
  state         UserState
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt()
  votes         Vote[]
  votings       Voting[]
  tokens        Token[]
}

enum TokenValidity {
  UNUSED
  REVOKED
  EXPIRED
}

model Token {
  token       String        @id @unique
  status      TokenValidity
  expiry_time DateTime
  user        User          @relation(fields: [user_uuid], references: [uuid])
  user_uuid   String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt()
}
